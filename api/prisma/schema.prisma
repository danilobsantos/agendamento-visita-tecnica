// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Modelo de Usuário
model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(FIELD_TEAM)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  team      Team?    @relation(fields: [teamId], references: [id])
  teamId    String?
  visits    Visit[]  // Visitas agendadas por vendedores
}

// Enum para os tipos de usuário
enum Role {
  ADMIN
  SELLER
  FIELD_TEAM
}

// Modelo de Equipe
model Team {
  id        String   @id @default(uuid())
  name      String
  members   User[]
  visits    Visit[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Modelo de Cliente
model Client {
  id        String   @id @default(uuid())
  name      String
  address   String
  city      String
  state     String
  zipCode   String
  phone     String
  email     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  visits    Visit[]
}

// Modelo de Visita/Agendamento
model Visit {
  id          String    @id @default(uuid())
  title       String
  description String?
  date        DateTime
  startTime   DateTime
  endTime     DateTime?
  status      Status    @default(SCHEDULED)
  imageUrl    String?
  location    String?
  notes       String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  client      Client    @relation(fields: [clientId], references: [id])
  clientId    String
  team        Team      @relation(fields: [teamId], references: [id])
  teamId      String
  createdBy   User      @relation(fields: [createdById], references: [id])
  createdById String
  services    Service[]
}

// Enum para o status da visita
enum Status {
  SCHEDULED
  IN_PROGRESS
  COMPLETED
  CANCELLED
}

// Modelo de Serviço
model Service {
  id          String   @id @default(uuid())
  name        String
  description String?
  duration    Int      // Duração em minutos
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  visits      Visit[]
}